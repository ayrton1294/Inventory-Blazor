@using Entities
@using Business

<EditForm Model="oStorage">
    <div class="form-group">
        <label>Bodega:</label>
        <InputSelect @bind-Value="oStorage.WareHouseId" class="form-control">
            <option value="">Seleccione una bodega...</option>
            @foreach (var warehouse in warehouses)
            {
                <option value="@warehouse.WareHouseId">@warehouse.WareHouseName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Bodega:</label>
        <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
            <option value="">Seleccione un producto...</option>
            @foreach (var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
    </div>
    <input type="button" value="Almacenar Producto" @onclick="SaveStorage"/>
</EditForm>

@code {
    StorageEntity oStorage = new StorageEntity();
    List<WareHouseEntity> warehouses = new List<WareHouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_WareHouse.WareHouseList();
        products = B_Product.ProductList();
    }

    private void SaveStorage()
    {
        oStorage.LastUpdate = DateTime.Now;
        oStorage.StorageId = Guid.NewGuid().ToString();
        B_Storage.CreateStorage(oStorage);
    }
}
